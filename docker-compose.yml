version: '3.8'

services:
  # Aplicación Node.js
  app:
    build: .
    container_name: ddsbedrocl-app
    restart: always
    ports:
      - "5000:5000"
    volumes:
      - ./:/app
      - /app/node_modules
      - /var/run/docker.sock:/var/run/docker.sock
      - minecraft-servers:/app/minecraft-servers
      - backups:/app/backups
      - logs:/app/logs
    depends_on:
      - mongo
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGO_URI=mongodb://mongo:27017/ddsbedrocl
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE=30d
      - CLIENT_URL=http://localhost:3000
      - DOCKER_SOCKET=/var/run/docker.sock
      - SERVER_DATA_PATH=/app/minecraft-servers
      - BACKUP_PATH=/app/backups
    networks:
      - ddsbedrocl-network
  
  # Base de datos MongoDB
  mongo:
    image: mongo:5.0
    container_name: ddsbedrocl-mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - ddsbedrocl-network
  
  # Cliente de la aplicación
  client:
    build: ./client
    container_name: ddsbedrocl-client
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
    networks:
      - ddsbedrocl-network
    depends_on:
      - app

networks:
  ddsbedrocl-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local
  minecraft-servers:
    driver: local
  backups:
    driver: local
  logs:
    driver: local 